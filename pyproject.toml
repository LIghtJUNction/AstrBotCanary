[project]
name = "astrbot-canary"
description = "This is an official support Astrbot."
readme = "README.md"
authors = [
    { name = "LIghtJUNction", email = "LIghtJUNction.me@gmail.com" }
]
dynamic = ["version","urls"]

requires-python = ">=3.13.8"
license = { file = "LICENSE" }
keywords = [
    "Astrbot",
    "Astrbot Module",
    "Astrbot Plugin"
]

dependencies = [
    "asyncio>=4.0.0",
    "click>=8.3.0",
    "dotenv>=0.9.9",
    "pydantic-settings>=2.11.0",
    "rich>=14.1.0",
    "toml>=0.10.2",
    "tqdm>=4.67.1",
    "astrbot-canary-api",
    "astrbot-canary-helper",
    "anyio>=4.11.0",
    "trio>=0.31.0",
    "taskiq>=0.11.18",
    "pyzmq>=27.1.0",
    "orjson>=3.11.3",
    "aiosqlite>=0.21.0",
    "yarl>=1.22.0",
    "taskiq-pipelines>=0.1.4",
    "types-requests>=2.32.4.20250913",
    "types-toml>=0.10.8.20240310",
    "types-click>=7.1.8",
    "types-pluggy>=1.2.0.20240106",
    "sqlalchemy[mypy]>=2.0.0",
    "pydantic>=2.12.0",
    "types-orjson>=3.6.2",
    "hatch-vcs>=0.5.0",
    "astrbot-config",
    "astrbot-sdk",
    "astrbot-injector",
    "astrbot-paths",
    "astrnet",
]
[dependency-groups]
dev = [
    "astrbot-canary-loader",
    "astrbot-canary-tui",
    "astrbot-canary-web",
    # 子项目
    "astrbot-canary-helper",
    "astrbot-canary-api",
    # 测试相关
    "pytest-asyncio",
    "pytest-mock",
    "pytest-cov",
    "pytest",
    "coverage",
    "codecov",
    # pre-commit相关
    "pre-commit",
    "darglint",
    "docstring-checker",
    "mypy>=1.18.2",
    "types-pyjwt>=1.7.1",
    "types-requests>=2.32.4.20250913",
    # "commitizen>=4.9.1",
    # 这个工具要求wrapt版本低于2.0，考虑到这并不是必须，仅仅是一个工具，故注释掉
    "mdformat>=1.0.0",
    "viztracer>=1.0.4",
    "ipykernel>=7.1.0",
    "deptry>=0.23.1",
]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.metadata.hooks.vcs.urls]
Funding = "https://github.com/AstrBotDevs/"
Homepage = "https://github.com/LIghtJUNction/astrbot_canary"
Issues = "https://github.com/LIghtJUNction/astrbot_canary/issues"
source_archive = "https://github.com/LIghtJUNction/astrbot_canary/archive/{commit_hash}.zip"

[project.optional-dependencies]
web = ["astrbot-canary-web"]
loader = ["astrbot-canary-loader"]
tui = ["astrbot-canary-tui"]
all = [
    "astrbot-canary-loader",
    "astrbot-canary-tui",
    "astrbot-canary-web"
]

[tool.hatch.build.targets.wheel]
packages = [
    "src/astrbot_canary",
    "astrbot_canary_modules/astrbot_canary_loader",
    "astrbot_canary_modules/astrbot_canary_loader_api",
    "astrbot_canary_modules/astrbot_canary_api",
    "astrbot_canary_modules/astrbot_canary_web",
    "astrbot_canary_modules/astrbot_canary_tui",
    "astrbot_canary_modules/astrbot_canary_helper"
]

[tool.uv.workspace]
members = [
    "astrbot_modules/astrbot_canary_web",
    "astrbot_modules/astrbot_canary_loader",
    "astrbot_modules/astrbot_canary_api",
    "astrbot_modules/astrbot_canary_tui",
    "astrbot_modules/astrbot_canary_helper",
    "astrbot_injector",
    "astrbot_config",
    "astrbot_paths",
    "astrbot_sdk",
    "astrnet",
]

[tool.uv.sources]
astrbot-canary-api = { workspace = true }
astrbot-canary-web = { workspace = true }
astrbot-canary-tui = { workspace = true }
astrbot-canary-loader = { workspace = true }
astrbot-canary-helper = { workspace = true }
astrbot-injector = { workspace = true }
astrbot-paths = { workspace = true }
astrbot-config = { workspace = true }
astrbot-sdk = { workspace = true }
astrnet = { workspace = true }

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["test"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.mypy]
python_version = "3.13"
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true
exclude = ["test/", "examples/", '.*\.pyi$', "__about__.py"]
mypy_path = ["astrbot_modules/","astrbot_plugins", "src/", "astrbot_injector/", "astrbot_paths/", "astrbot_config/", "astrbot_sdk/"]
ignore_missing_imports = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
disallow_any_generics = true
warn_return_any = true
warn_unused_configs = true
strict = true
strict_optional = true
allow_redefinition = false

[tool.ruff]
fix = true
show-fixes = true

[tool.ruff.lint]
select = ["ALL"]
exclude = [
    "*.venv",
    "*test*",
    "*scripts*",
    "*examples*",
    "*.pyi",
    "*.ipynb",
    "*__about__.py"
]
ignore = ["N", "D"]

per-file-ignores = {}

[tool.ruff.lint.flake8-type-checking]
runtime-evaluated-base-classes = ["pydantic.BaseModel"]
runtime-evaluated-decorators = ["pydantic.dataclasses.dataclass"]

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "uv"
update_changelog_on_bump = true
major_version_zero = true

[project.entry-points."astrbot.modules"]
"canary_core" = "astrbot_canary.module:AstrbotCoreModule"

# 对于插件项目：
# [project.entry-points."astrbot.plugins"]
# "example-plugin" = "examples.plugin_example:Plugin"      # 指向插件类
[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "./src/astrbot_canary/__about__.py"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

