{
    "openapi": "3.0.0",
    "info": {
        "title": "AstrBot API",
        "version": "1.0.0",
        "description": "AstrBot authentication, account management, chat, configuration, conversation, file, log, persona, plugin, session management, statistics, text-to-image templates, tools, and update API"
    },
    "paths": {
        "/api/auth/login": {
            "post": {
                "summary": "User login",
                "description": "Authenticate user with username and password",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/account/edit": {
            "post": {
                "summary": "Edit account",
                "description": "Edit user account information (username and/or password)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EditAccountRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Account updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request or invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/send": {
            "post": {
                "summary": "Send chat message",
                "description": "Send a message to the chat system, supports streaming response",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChatSendRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Streaming chat response",
                        "content": {
                            "text/event-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChatStreamResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/new_conversation": {
            "get": {
                "summary": "Create new conversation",
                "description": "Create a new conversation session",
                "responses": {
                    "200": {
                        "description": "New conversation created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NewConversationResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/conversations": {
            "get": {
                "summary": "Get conversations",
                "description": "Retrieve list of conversations",
                "responses": {
                    "200": {
                        "description": "List of conversations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConversationsResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/get_conversation": {
            "get": {
                "summary": "Get conversation history",
                "description": "Retrieve history of a specific conversation",
                "parameters": [
                    {
                        "name": "conversation_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Conversation ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conversation history",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConversationHistoryResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing conversation_id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/delete_conversation": {
            "get": {
                "summary": "Delete conversation",
                "description": "Delete a conversation",
                "parameters": [
                    {
                        "name": "conversation_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Conversation ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conversation deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing conversation_id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/rename_conversation": {
            "post": {
                "summary": "Rename conversation",
                "description": "Rename a conversation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RenameConversationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Conversation renamed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/get_file": {
            "get": {
                "summary": "Get file",
                "description": "Retrieve a file by filename",
                "parameters": [
                    {
                        "name": "filename",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filename"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File content",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing filename",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/post_image": {
            "post": {
                "summary": "Upload image",
                "description": "Upload an image file",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FileUploadRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Image uploaded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileUploadResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing file",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/chat/post_file": {
            "post": {
                "summary": "Upload file",
                "description": "Upload a file (audio or other)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FileUploadRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "File uploaded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FileUploadResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing file",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/config/abconf/new": {
            "post": {
                "summary": "Create new AstrBot config",
                "description": "Create a new AstrBot configuration file",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAbconfRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Config created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateAbconfResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/config/abconf": {
            "get": {
                "summary": "Get AstrBot config",
                "description": "Get a specific AstrBot configuration file",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Config ID"
                    },
                    {
                        "name": "system_config",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "0",
                                "1"
                            ]
                        },
                        "description": "Whether to get system config (1) or user config (0)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Config retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AbconfResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/config/abconfs": {
            "get": {
                "summary": "Get AstrBot config list",
                "description": "Get list of all AstrBot configuration files",
                "responses": {
                    "200": {
                        "description": "Config list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AbconfListResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/config/abconf/delete": {
            "post": {
                "summary": "Delete AstrBot config",
                "description": "Delete a specific AstrBot configuration file",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteAbconfRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Config deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/config/abconf/update": {
            "post": {
                "summary": "Update AstrBot config info",
                "description": "Update information of a specific AstrBot configuration file",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAbconfRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Config updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/config/get": {
            "get": {
                "summary": "Get configs",
                "description": "Get AstrBot or plugin configurations",
                "parameters": [
                    {
                        "name": "plugin_name",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Plugin name (optional, if not provided returns AstrBot config)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Configs retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConfigResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/config/astrbot/update": {
            "post": {
                "summary": "Update AstrBot configs",
                "description": "Update AstrBot configurations",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAstrbotConfigRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Configs updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/config/plugin/update": {
            "post": {
                "summary": "Update plugin configs",
                "description": "Update plugin configurations",
                "parameters": [
                    {
                        "name": "plugin_name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Plugin name"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "description": "Plugin config data"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Plugin configs updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/config/platform/new": {
            "post": {
                "summary": "Create new platform",
                "description": "Create a new platform configuration",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "description": "Platform config data"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Platform created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/config/platform/update": {
            "post": {
                "summary": "Update platform",
                "description": "Update a platform configuration",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePlatformRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Platform updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/config/platform/delete": {
            "post": {
                "summary": "Delete platform",
                "description": "Delete a platform configuration",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeletePlatformRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Platform deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/config/platform/list": {
            "get": {
                "summary": "Get platform list",
                "description": "Get list of all platforms",
                "responses": {
                    "200": {
                        "description": "Platform list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlatformListResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/config/provider/new": {
            "post": {
                "summary": "Create new provider",
                "description": "Create a new provider configuration",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "description": "Provider config data"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Provider created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/config/provider/update": {
            "post": {
                "summary": "Update provider",
                "description": "Update a provider configuration",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProviderRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Provider updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/config/provider/delete": {
            "post": {
                "summary": "Delete provider",
                "description": "Delete a provider configuration",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteProviderRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Provider deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/config/provider/check_one": {
            "get": {
                "summary": "Check provider status",
                "description": "Check the status of a single provider",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Provider ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Provider status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderStatusResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing provider ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/config/provider/list": {
            "get": {
                "summary": "Get provider config list",
                "description": "Get list of provider configurations by type",
                "parameters": [
                    {
                        "name": "provider_type",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Provider types (comma-separated)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Provider list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing provider_type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/config/provider/model_list": {
            "get": {
                "summary": "Get provider model list",
                "description": "Get list of models for a specific provider",
                "parameters": [
                    {
                        "name": "provider_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Provider ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Model list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProviderModelListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing provider_id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/conversation/list": {
            "get": {
                "summary": "List conversations",
                "description": "Get list of conversations with pagination, sorting and filtering",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Page number"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "maximum": 100
                        },
                        "description": "Page size"
                    },
                    {
                        "name": "platforms",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by platforms (comma-separated)"
                    },
                    {
                        "name": "message_types",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter by message types (comma-separated)"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search query"
                    },
                    {
                        "name": "exclude_ids",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Exclude conversation IDs (comma-separated)"
                    },
                    {
                        "name": "exclude_platforms",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Exclude platforms (comma-separated)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Conversation list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConversationListResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/conversation/detail": {
            "post": {
                "summary": "Get conversation detail",
                "description": "Get detailed information of a specific conversation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConversationDetailRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Conversation detail",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConversationDetailResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/conversation/update": {
            "post": {
                "summary": "Update conversation",
                "description": "Update conversation information (title and persona ID)",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateConversationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Conversation updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/conversation/delete": {
            "post": {
                "summary": "Delete conversation",
                "description": "Delete one or multiple conversations",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteConversationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Conversation(s) deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DeleteConversationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/conversation/update_history": {
            "post": {
                "summary": "Update conversation history",
                "description": "Update the history content of a conversation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateHistoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "History updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/file/{file_token}": {
            "get": {
                "summary": "Serve file",
                "description": "Serve a file by its token",
                "parameters": [
                    {
                        "name": "file_token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "File token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File content",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/live-log": {
            "get": {
                "summary": "Live log stream",
                "description": "Get real-time log stream using Server-Sent Events",
                "responses": {
                    "200": {
                        "description": "Live log stream",
                        "content": {
                            "text/event-stream": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogStreamResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/log-history": {
            "get": {
                "summary": "Get log history",
                "description": "Get historical logs",
                "responses": {
                    "200": {
                        "description": "Log history",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogHistoryResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/persona/list": {
            "get": {
                "summary": "List personas",
                "description": "Get list of all personas",
                "responses": {
                    "200": {
                        "description": "List of personas",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonaListResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/persona/detail": {
            "post": {
                "summary": "Get persona detail",
                "description": "Get detailed information of a specific persona",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PersonaDetailRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Persona detail",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonaDetailResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/persona/create": {
            "post": {
                "summary": "Create persona",
                "description": "Create a new persona",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePersonaRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Persona created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreatePersonaResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/persona/update": {
            "post": {
                "summary": "Update persona",
                "description": "Update persona information",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePersonaRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Persona updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/persona/delete": {
            "post": {
                "summary": "Delete persona",
                "description": "Delete a persona",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeletePersonaRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Persona deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/plugin/get": {
            "get": {
                "summary": "Get plugins",
                "description": "Get list of installed plugins",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Specific plugin name (optional)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Plugin list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PluginListResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/plugin/install": {
            "post": {
                "summary": "Install plugin",
                "description": "Install a plugin from repository URL",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstallPluginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Plugin installed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/plugin/install-upload": {
            "post": {
                "summary": "Install plugin from upload",
                "description": "Install a plugin from uploaded file",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FileUploadRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Plugin installed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/plugin/update": {
            "post": {
                "summary": "Update plugin",
                "description": "Update a plugin to latest version",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePluginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Plugin updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/plugin/uninstall": {
            "post": {
                "summary": "Uninstall plugin",
                "description": "Uninstall a plugin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UninstallPluginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Plugin uninstalled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/plugin/market_list": {
            "get": {
                "summary": "Get online plugins",
                "description": "Get list of available plugins from online market",
                "parameters": [
                    {
                        "name": "custom_registry",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Custom registry URL (optional)"
                    },
                    {
                        "name": "force_refresh",
                        "in": "query",
                        "schema": {
                            "type": "boolean",
                            "default": false
                        },
                        "description": "Force refresh cache"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Online plugin list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Plugin market data"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/plugin/off": {
            "post": {
                "summary": "Disable plugin",
                "description": "Disable a plugin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PluginActionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Plugin disabled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/plugin/on": {
            "post": {
                "summary": "Enable plugin",
                "description": "Enable a plugin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PluginActionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Plugin enabled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/plugin/reload": {
            "post": {
                "summary": "Reload plugins",
                "description": "Reload plugins",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReloadPluginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Plugins reloaded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/plugin/readme": {
            "get": {
                "summary": "Get plugin README",
                "description": "Get README content of a plugin",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Plugin name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Plugin README",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PluginReadmeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/session/list": {
            "get": {
                "summary": "List sessions",
                "description": "Get list of all sessions with persona and provider information",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Page number"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 20
                        },
                        "description": "Page size"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search query"
                    },
                    {
                        "name": "platform",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Platform filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SessionListResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/session/update_persona": {
            "post": {
                "summary": "Update session persona",
                "description": "Update persona for specified session(s), supports batch operation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSessionPersonaRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Persona updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/session/update_provider": {
            "post": {
                "summary": "Update session provider",
                "description": "Update provider for specified session(s), supports batch operation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSessionProviderRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Provider updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/session/plugins": {
            "get": {
                "summary": "Get session plugins",
                "description": "Get plugin configuration for specified session",
                "parameters": [
                    {
                        "name": "session_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Session ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session plugins",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SessionPluginsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/session/update_plugin": {
            "post": {
                "summary": "Update session plugin",
                "description": "Update plugin enable/disable status for specified session",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSessionPluginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Plugin updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/session/update_llm": {
            "post": {
                "summary": "Update session LLM status",
                "description": "Update LLM enable/disable status for specified session(s), supports batch operation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSessionServiceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "LLM status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/session/update_tts": {
            "post": {
                "summary": "Update session TTS status",
                "description": "Update TTS enable/disable status for specified session(s), supports batch operation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSessionServiceRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "TTS status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/session/update_name": {
            "post": {
                "summary": "Update session name",
                "description": "Update custom display name for specified session",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSessionNameRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Session name updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/session/update_status": {
            "post": {
                "summary": "Update session status",
                "description": "Update overall enable/disable status for specified session",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSessionStatusRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Session status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/session/delete": {
            "post": {
                "summary": "Delete session",
                "description": "Delete specified session and all related data",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteSessionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Session deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/stat/get": {
            "get": {
                "summary": "Get statistics",
                "description": "Get system statistics and metrics",
                "parameters": [
                    {
                        "name": "offset_sec",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "default": 86400
                        },
                        "description": "Time offset in seconds (default 24 hours)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Statistics data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StatResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/stat/version": {
            "get": {
                "summary": "Get version information",
                "description": "Get version information and migration status",
                "responses": {
                    "200": {
                        "description": "Version information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VersionResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/stat/start-time": {
            "get": {
                "summary": "Get start time",
                "description": "Get system start time",
                "responses": {
                    "200": {
                        "description": "Start time",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StartTimeResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/stat/restart-core": {
            "post": {
                "summary": "Restart core",
                "description": "Restart the AstrBot core system",
                "responses": {
                    "200": {
                        "description": "Core restarted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Operation not permitted in demo mode",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/stat/test-ghproxy-connection": {
            "post": {
                "summary": "Test GitHub proxy connection",
                "description": "Test connection to GitHub proxy server",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestGhproxyRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Connection test successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestGhproxyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/t2i/templates": {
            "get": {
                "summary": "List T2I templates",
                "description": "Get list of all text-to-image templates",
                "responses": {
                    "200": {
                        "description": "Templates list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/T2iTemplatesResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/t2i/templates/active": {
            "get": {
                "summary": "Get active T2I template",
                "description": "Get currently active text-to-image template",
                "responses": {
                    "200": {
                        "description": "Active template",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/T2iActiveTemplateResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/t2i/templates/create": {
            "post": {
                "summary": "Create T2I template",
                "description": "Create a new text-to-image template",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateT2iTemplateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Template created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/T2iTemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Template already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/t2i/templates/reset_default": {
            "post": {
                "summary": "Reset default T2I template",
                "description": "Reset the default 'base' text-to-image template",
                "responses": {
                    "200": {
                        "description": "Default template reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Default template not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/t2i/templates/set_active": {
            "post": {
                "summary": "Set active T2I template",
                "description": "Set the currently active text-to-image template",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SetActiveT2iTemplateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Active template set successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Template not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/t2i/templates/{name}": {
            "get": {
                "summary": "Get T2I template",
                "description": "Get content of a specific text-to-image template",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Template name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Template content",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/T2iTemplateContentResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Template not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update T2I template",
                "description": "Update an existing text-to-image template",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Template name"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateT2iTemplateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Template updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/T2iTemplateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete T2I template",
                "description": "Delete a text-to-image template",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Template name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Template deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Template not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tools/mcp/servers": {
            "get": {
                "summary": "Get MCP servers",
                "description": "Get list of all MCP servers with their configuration and tool information",
                "responses": {
                    "200": {
                        "description": "List of MCP servers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/McpServersResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tools/mcp/add": {
            "post": {
                "summary": "Add MCP server",
                "description": "Add a new MCP server configuration",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddMcpServerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "MCP server added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tools/mcp/update": {
            "post": {
                "summary": "Update MCP server",
                "description": "Update an existing MCP server configuration",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMcpServerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "MCP server updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Server not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tools/mcp/delete": {
            "post": {
                "summary": "Delete MCP server",
                "description": "Delete an MCP server configuration",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteMcpServerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "MCP server deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Server not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tools/mcp/test": {
            "post": {
                "summary": "Test MCP connection",
                "description": "Test connection to an MCP server configuration",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TestMcpConnectionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "MCP connection test successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestMcpConnectionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tools/list": {
            "get": {
                "summary": "Get tool list",
                "description": "Get list of all registered tools",
                "responses": {
                    "200": {
                        "description": "List of tools",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ToolListResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tools/toggle-tool": {
            "post": {
                "summary": "Toggle tool",
                "description": "Enable or disable a specific tool",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ToggleToolRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tool toggled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tool not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tools/mcp/sync-provider": {
            "post": {
                "summary": "Sync MCP provider",
                "description": "Sync MCP server configurations from a provider",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SyncMcpProviderRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "MCP provider synced successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/update/check": {
            "get": {
                "summary": "Check for updates",
                "description": "Check for available updates for AstrBot and dashboard",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "dashboard"
                            ]
                        },
                        "description": "Type of update to check (dashboard or all)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update check result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckUpdateResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/update/releases": {
            "get": {
                "summary": "Get releases",
                "description": "Get list of available releases",
                "responses": {
                    "200": {
                        "description": "List of releases",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReleasesResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/update/do": {
            "post": {
                "summary": "Update project",
                "description": "Update AstrBot project to a specific version",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update initiated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "headers": {
                            "Clear-Site-Data": {
                                "description": "Cache clearing header",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/update/dashboard": {
            "post": {
                "summary": "Update dashboard",
                "description": "Update the dashboard to the current version",
                "responses": {
                    "200": {
                        "description": "Dashboard update successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        },
                        "headers": {
                            "Clear-Site-Data": {
                                "description": "Cache clearing header",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/update/pip-install": {
            "post": {
                "summary": "Install pip package",
                "description": "Install a Python package via pip",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstallPipPackageRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Package installed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/update/migration": {
            "post": {
                "summary": "Perform migration",
                "description": "Perform database migration to version 4",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MigrationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Migration completed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Migration not needed or failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "LoginResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "description": "JWT token"
                    },
                    "username": {
                        "type": "string",
                        "description": "User username"
                    },
                    "change_pwd_hint": {
                        "type": "boolean",
                        "description": "Hint to change default password"
                    }
                }
            },
            "EditAccountRequest": {
                "type": "object",
                "required": [
                    "password"
                ],
                "properties": {
                    "password": {
                        "type": "string",
                        "description": "Current password"
                    },
                    "new_password": {
                        "type": "string",
                        "description": "New password (optional)"
                    },
                    "new_username": {
                        "type": "string",
                        "description": "New username (optional)"
                    }
                }
            },
            "SuccessResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Success message"
                    }
                }
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string",
                        "description": "Error message"
                    }
                }
            },
            "ChatSendRequest": {
                "type": "object",
                "required": [
                    "conversation_id"
                ],
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Chat message"
                    },
                    "conversation_id": {
                        "type": "string",
                        "description": "Conversation ID"
                    },
                    "image_url": {
                        "type": "string",
                        "description": "Image URL (optional)"
                    },
                    "audio_url": {
                        "type": "string",
                        "description": "Audio URL (optional)"
                    },
                    "selected_provider": {
                        "type": "string",
                        "description": "Selected provider (optional)"
                    },
                    "selected_model": {
                        "type": "string",
                        "description": "Selected model (optional)"
                    }
                }
            },
            "ChatStreamResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "string",
                        "description": "Stream data"
                    },
                    "type": {
                        "type": "string",
                        "description": "Response type"
                    },
                    "streaming": {
                        "type": "boolean",
                        "description": "Is streaming"
                    }
                }
            },
            "NewConversationResponse": {
                "type": "object",
                "properties": {
                    "conversation_id": {
                        "type": "string",
                        "description": "New conversation ID"
                    }
                }
            },
            "ConversationsResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Conversation"
                        },
                        "description": "List of conversations"
                    }
                }
            },
            "Conversation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Conversation ID"
                    },
                    "title": {
                        "type": "string",
                        "description": "Conversation title"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation time"
                    }
                }
            },
            "ConversationHistoryResponse": {
                "type": "object",
                "properties": {
                    "history": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageHistory"
                        },
                        "description": "Message history"
                    },
                    "is_running": {
                        "type": "boolean",
                        "description": "Is conversation running"
                    }
                }
            },
            "MessageHistory": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Message type (user/bot)"
                    },
                    "message": {
                        "type": "string",
                        "description": "Message content"
                    },
                    "image_url": {
                        "type": "string",
                        "description": "Image URL (optional)"
                    },
                    "audio_url": {
                        "type": "string",
                        "description": "Audio URL (optional)"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Message timestamp"
                    }
                }
            },
            "RenameConversationRequest": {
                "type": "object",
                "required": [
                    "conversation_id",
                    "title"
                ],
                "properties": {
                    "conversation_id": {
                        "type": "string",
                        "description": "Conversation ID"
                    },
                    "title": {
                        "type": "string",
                        "description": "New title"
                    }
                }
            },
            "FileUploadRequest": {
                "type": "object",
                "required": [
                    "file"
                ],
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "description": "File to upload"
                    }
                }
            },
            "FileUploadResponse": {
                "type": "object",
                "properties": {
                    "filename": {
                        "type": "string",
                        "description": "Uploaded filename"
                    }
                }
            },
            "CreateAbconfRequest": {
                "type": "object",
                "required": [
                    "umo_parts"
                ],
                "properties": {
                    "umo_parts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "UMO parts"
                    },
                    "name": {
                        "type": "string",
                        "description": "Config name (optional)"
                    }
                }
            },
            "CreateAbconfResponse": {
                "type": "object",
                "properties": {
                    "conf_id": {
                        "type": "string",
                        "description": "Created config ID"
                    }
                }
            },
            "AbconfResponse": {
                "type": "object",
                "properties": {
                    "config": {
                        "type": "object",
                        "description": "Config data"
                    },
                    "metadata": {
                        "type": "object",
                        "description": "Config metadata"
                    }
                }
            },
            "AbconfListResponse": {
                "type": "object",
                "properties": {
                    "info_list": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of config info"
                    }
                }
            },
            "DeleteAbconfRequest": {
                "type": "object",
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Config ID to delete"
                    }
                }
            },
            "UpdateAbconfRequest": {
                "type": "object",
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Config ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "New name"
                    },
                    "umo_parts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "New UMO parts"
                    }
                }
            },
            "ConfigResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "type": "object",
                        "description": "Config metadata"
                    },
                    "config": {
                        "type": "object",
                        "description": "Config data"
                    }
                }
            },
            "UpdateAstrbotConfigRequest": {
                "type": "object",
                "required": [
                    "config",
                    "conf_id"
                ],
                "properties": {
                    "config": {
                        "type": "object",
                        "description": "Config data"
                    },
                    "conf_id": {
                        "type": "string",
                        "description": "Config ID"
                    }
                }
            },
            "UpdatePlatformRequest": {
                "type": "object",
                "required": [
                    "id",
                    "config"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Platform ID"
                    },
                    "config": {
                        "type": "object",
                        "description": "New platform config"
                    }
                }
            },
            "DeletePlatformRequest": {
                "type": "object",
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Platform ID to delete"
                    }
                }
            },
            "PlatformListResponse": {
                "type": "object",
                "properties": {
                    "platforms": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of platforms"
                    }
                }
            },
            "UpdateProviderRequest": {
                "type": "object",
                "required": [
                    "id",
                    "config"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Provider ID"
                    },
                    "config": {
                        "type": "object",
                        "description": "New provider config"
                    }
                }
            },
            "DeleteProviderRequest": {
                "type": "object",
                "required": [
                    "id"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Provider ID to delete"
                    }
                }
            },
            "ProviderStatusResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Provider ID"
                    },
                    "model": {
                        "type": "string",
                        "description": "Model name"
                    },
                    "type": {
                        "type": "string",
                        "description": "Provider type"
                    },
                    "name": {
                        "type": "string",
                        "description": "Provider name"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "available",
                            "unavailable"
                        ],
                        "description": "Provider status"
                    },
                    "error": {
                        "type": "string",
                        "description": "Error message if unavailable"
                    }
                }
            },
            "ProviderModelListResponse": {
                "type": "object",
                "properties": {
                    "models": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of models"
                    },
                    "provider_id": {
                        "type": "string",
                        "description": "Provider ID"
                    }
                }
            },
            "ConversationListResponse": {
                "type": "object",
                "properties": {
                    "conversations": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "List of conversations"
                    },
                    "pagination": {
                        "type": "object",
                        "properties": {
                            "page": {
                                "type": "integer",
                                "description": "Current page"
                            },
                            "page_size": {
                                "type": "integer",
                                "description": "Page size"
                            },
                            "total": {
                                "type": "integer",
                                "description": "Total count"
                            },
                            "total_pages": {
                                "type": "integer",
                                "description": "Total pages"
                            }
                        },
                        "description": "Pagination info"
                    }
                }
            },
            "ConversationDetailRequest": {
                "type": "object",
                "required": [
                    "user_id",
                    "cid"
                ],
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "User ID"
                    },
                    "cid": {
                        "type": "string",
                        "description": "Conversation ID"
                    }
                }
            },
            "ConversationDetailResponse": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "User ID"
                    },
                    "cid": {
                        "type": "string",
                        "description": "Conversation ID"
                    },
                    "title": {
                        "type": "string",
                        "description": "Conversation title"
                    },
                    "persona_id": {
                        "type": "string",
                        "description": "Persona ID"
                    },
                    "history": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "Conversation history"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Update time"
                    }
                }
            },
            "UpdateConversationRequest": {
                "type": "object",
                "required": [
                    "user_id",
                    "cid"
                ],
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "User ID"
                    },
                    "cid": {
                        "type": "string",
                        "description": "Conversation ID"
                    },
                    "title": {
                        "type": "string",
                        "description": "New title"
                    },
                    "persona_id": {
                        "type": "string",
                        "description": "New persona ID"
                    }
                }
            },
            "DeleteConversationRequest": {
                "type": "object",
                "oneOf": [
                    {
                        "required": [
                            "user_id",
                            "cid"
                        ],
                        "properties": {
                            "user_id": {
                                "type": "string",
                                "description": "User ID"
                            },
                            "cid": {
                                "type": "string",
                                "description": "Conversation ID"
                            }
                        }
                    },
                    {
                        "required": [
                            "conversations"
                        ],
                        "properties": {
                            "conversations": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "required": [
                                        "user_id",
                                        "cid"
                                    ],
                                    "properties": {
                                        "user_id": {
                                            "type": "string",
                                            "description": "User ID"
                                        },
                                        "cid": {
                                            "type": "string",
                                            "description": "Conversation ID"
                                        }
                                    }
                                },
                                "description": "List of conversations to delete"
                            }
                        }
                    }
                ]
            },
            "DeleteConversationResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Result message"
                    },
                    "deleted_count": {
                        "type": "integer",
                        "description": "Number of successfully deleted conversations"
                    },
                    "failed_count": {
                        "type": "integer",
                        "description": "Number of failed deletions"
                    },
                    "failed_items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of failed items with error messages"
                    }
                }
            },
            "UpdateHistoryRequest": {
                "type": "object",
                "required": [
                    "user_id",
                    "cid",
                    "history"
                ],
                "properties": {
                    "user_id": {
                        "type": "string",
                        "description": "User ID"
                    },
                    "cid": {
                        "type": "string",
                        "description": "Conversation ID"
                    },
                    "history": {
                        "oneOf": [
                            {
                                "type": "array",
                                "description": "History as array"
                            },
                            {
                                "type": "string",
                                "description": "History as JSON string"
                            }
                        ],
                        "description": "Conversation history"
                    }
                }
            },
            "LogStreamResponse": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "Message type (always 'log')"
                    },
                    "level": {
                        "type": "string",
                        "description": "Log level"
                    },
                    "message": {
                        "type": "string",
                        "description": "Log message"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Log timestamp"
                    },
                    "module": {
                        "type": "string",
                        "description": "Module name"
                    }
                }
            },
            "LogHistoryResponse": {
                "type": "object",
                "properties": {
                    "logs": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "level": {
                                    "type": "string",
                                    "description": "Log level"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Log message"
                                },
                                "timestamp": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Log timestamp"
                                },
                                "module": {
                                    "type": "string",
                                    "description": "Module name"
                                }
                            }
                        },
                        "description": "List of log entries"
                    }
                }
            },
            "PersonaListResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Persona"
                },
                "description": "List of personas"
            },
            "Persona": {
                "type": "object",
                "properties": {
                    "persona_id": {
                        "type": "string",
                        "description": "Persona ID"
                    },
                    "system_prompt": {
                        "type": "string",
                        "description": "System prompt"
                    },
                    "begin_dialogs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Begin dialogs"
                    },
                    "tools": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tools"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Update time"
                    }
                }
            },
            "PersonaDetailRequest": {
                "type": "object",
                "required": [
                    "persona_id"
                ],
                "properties": {
                    "persona_id": {
                        "type": "string",
                        "description": "Persona ID"
                    }
                }
            },
            "PersonaDetailResponse": {
                "type": "object",
                "properties": {
                    "persona_id": {
                        "type": "string",
                        "description": "Persona ID"
                    },
                    "system_prompt": {
                        "type": "string",
                        "description": "System prompt"
                    },
                    "begin_dialogs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Begin dialogs"
                    },
                    "tools": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tools"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Update time"
                    }
                }
            },
            "CreatePersonaRequest": {
                "type": "object",
                "required": [
                    "persona_id",
                    "system_prompt"
                ],
                "properties": {
                    "persona_id": {
                        "type": "string",
                        "description": "Persona ID"
                    },
                    "system_prompt": {
                        "type": "string",
                        "description": "System prompt"
                    },
                    "begin_dialogs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Begin dialogs (must be even number)"
                    },
                    "tools": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tools"
                    }
                }
            },
            "CreatePersonaResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Success message"
                    },
                    "persona": {
                        "$ref": "#/components/schemas/Persona"
                    }
                }
            },
            "UpdatePersonaRequest": {
                "type": "object",
                "required": [
                    "persona_id"
                ],
                "properties": {
                    "persona_id": {
                        "type": "string",
                        "description": "Persona ID"
                    },
                    "system_prompt": {
                        "type": "string",
                        "description": "System prompt"
                    },
                    "begin_dialogs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Begin dialogs (must be even number)"
                    },
                    "tools": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Tools"
                    }
                }
            },
            "DeletePersonaRequest": {
                "type": "object",
                "required": [
                    "persona_id"
                ],
                "properties": {
                    "persona_id": {
                        "type": "string",
                        "description": "Persona ID to delete"
                    }
                }
            },
            "PluginListResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/PluginInfo"
                },
                "description": "List of plugins"
            },
            "PluginInfo": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Plugin name"
                    },
                    "repo": {
                        "type": "string",
                        "description": "Repository URL"
                    },
                    "author": {
                        "type": "string",
                        "description": "Plugin author"
                    },
                    "desc": {
                        "type": "string",
                        "description": "Plugin description"
                    },
                    "version": {
                        "type": "string",
                        "description": "Plugin version"
                    },
                    "reserved": {
                        "type": "boolean",
                        "description": "Is reserved plugin"
                    },
                    "activated": {
                        "type": "boolean",
                        "description": "Is activated"
                    },
                    "online_version": {
                        "type": "string",
                        "description": "Online version"
                    },
                    "handlers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PluginHandler"
                        },
                        "description": "Plugin handlers"
                    }
                }
            },
            "PluginHandler": {
                "type": "object",
                "properties": {
                    "event_type": {
                        "type": "string",
                        "description": "Event type"
                    },
                    "event_type_h": {
                        "type": "string",
                        "description": "Human readable event type"
                    },
                    "handler_full_name": {
                        "type": "string",
                        "description": "Handler full name"
                    },
                    "desc": {
                        "type": "string",
                        "description": "Handler description"
                    },
                    "handler_name": {
                        "type": "string",
                        "description": "Handler name"
                    },
                    "type": {
                        "type": "string",
                        "description": "Handler type"
                    },
                    "cmd": {
                        "type": "string",
                        "description": "Command"
                    },
                    "has_admin": {
                        "type": "boolean",
                        "description": "Has admin permission"
                    },
                    "sub_command": {
                        "type": "string",
                        "description": "Sub command"
                    }
                }
            },
            "InstallPluginRequest": {
                "type": "object",
                "required": [
                    "url"
                ],
                "properties": {
                    "url": {
                        "type": "string",
                        "description": "Repository URL"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy URL (optional)"
                    }
                }
            },
            "UpdatePluginRequest": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Plugin name"
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy URL (optional)"
                    }
                }
            },
            "UninstallPluginRequest": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Plugin name"
                    }
                }
            },
            "PluginActionRequest": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Plugin name"
                    }
                }
            },
            "ReloadPluginRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Plugin name (optional, reload all if not specified)"
                    }
                }
            },
            "PluginReadmeResponse": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string",
                        "description": "README content"
                    }
                }
            },
            "SessionListResponse": {
                "type": "object",
                "properties": {
                    "sessions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SessionInfo"
                        },
                        "description": "List of sessions"
                    },
                    "available_personas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PersonaInfo"
                        },
                        "description": "Available personas"
                    },
                    "available_chat_providers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProviderInfo"
                        },
                        "description": "Available chat providers"
                    },
                    "available_stt_providers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProviderInfo"
                        },
                        "description": "Available STT providers"
                    },
                    "available_tts_providers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProviderInfo"
                        },
                        "description": "Available TTS providers"
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/PaginationInfo"
                    }
                }
            },
            "SessionInfo": {
                "type": "object",
                "properties": {
                    "session_id": {
                        "type": "string",
                        "description": "Session ID"
                    },
                    "conversation_id": {
                        "type": "string",
                        "description": "Conversation ID"
                    },
                    "persona_id": {
                        "type": "string",
                        "description": "Persona name"
                    },
                    "chat_provider_id": {
                        "type": "string",
                        "description": "Chat provider ID"
                    },
                    "stt_provider_id": {
                        "type": "string",
                        "description": "STT provider ID"
                    },
                    "tts_provider_id": {
                        "type": "string",
                        "description": "TTS provider ID"
                    },
                    "session_enabled": {
                        "type": "boolean",
                        "description": "Session enabled status"
                    },
                    "llm_enabled": {
                        "type": "boolean",
                        "description": "LLM enabled status"
                    },
                    "tts_enabled": {
                        "type": "boolean",
                        "description": "TTS enabled status"
                    },
                    "platform": {
                        "type": "string",
                        "description": "Platform"
                    },
                    "message_type": {
                        "type": "string",
                        "description": "Message type"
                    },
                    "session_name": {
                        "type": "string",
                        "description": "Session display name"
                    },
                    "session_raw_name": {
                        "type": "string",
                        "description": "Session raw name"
                    },
                    "title": {
                        "type": "string",
                        "description": "Conversation title"
                    }
                }
            },
            "PersonaInfo": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Persona name"
                    },
                    "prompt": {
                        "type": "string",
                        "description": "Persona prompt"
                    }
                }
            },
            "ProviderInfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Provider ID"
                    },
                    "name": {
                        "type": "string",
                        "description": "Provider name"
                    },
                    "model": {
                        "type": "string",
                        "description": "Provider model"
                    },
                    "type": {
                        "type": "string",
                        "description": "Provider type"
                    }
                }
            },
            "PaginationInfo": {
                "type": "object",
                "properties": {
                    "page": {
                        "type": "integer",
                        "description": "Current page"
                    },
                    "page_size": {
                        "type": "integer",
                        "description": "Page size"
                    },
                    "total": {
                        "type": "integer",
                        "description": "Total items"
                    },
                    "total_pages": {
                        "type": "integer",
                        "description": "Total pages"
                    }
                }
            },
            "UpdateSessionPersonaRequest": {
                "type": "object",
                "required": [
                    "persona_name"
                ],
                "properties": {
                    "is_batch": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this is a batch operation"
                    },
                    "session_id": {
                        "type": "string",
                        "description": "Session ID (required if not batch)"
                    },
                    "session_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Session IDs (required for batch operation)"
                    },
                    "persona_name": {
                        "type": "string",
                        "description": "Persona name"
                    }
                }
            },
            "UpdateSessionProviderRequest": {
                "type": "object",
                "required": [
                    "provider_id",
                    "provider_type"
                ],
                "properties": {
                    "is_batch": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this is a batch operation"
                    },
                    "session_id": {
                        "type": "string",
                        "description": "Session ID (required if not batch)"
                    },
                    "session_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Session IDs (required for batch operation)"
                    },
                    "provider_id": {
                        "type": "string",
                        "description": "Provider ID"
                    },
                    "provider_type": {
                        "type": "string",
                        "enum": [
                            "chat_completion",
                            "speech_to_text",
                            "text_to_speech"
                        ],
                        "description": "Provider type"
                    }
                }
            },
            "SessionPluginsResponse": {
                "type": "object",
                "properties": {
                    "session_id": {
                        "type": "string",
                        "description": "Session ID"
                    },
                    "plugins": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PluginInfo"
                        },
                        "description": "List of plugins for the session"
                    }
                }
            },
            "UpdateSessionPluginRequest": {
                "type": "object",
                "required": [
                    "session_id",
                    "plugin_name",
                    "enabled"
                ],
                "properties": {
                    "session_id": {
                        "type": "string",
                        "description": "Session ID"
                    },
                    "plugin_name": {
                        "type": "string",
                        "description": "Plugin name"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Plugin enabled status"
                    }
                }
            },
            "UpdateSessionServiceRequest": {
                "type": "object",
                "required": [
                    "enabled"
                ],
                "properties": {
                    "is_batch": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether this is a batch operation"
                    },
                    "session_id": {
                        "type": "string",
                        "description": "Session ID (required if not batch)"
                    },
                    "session_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Session IDs (required for batch operation)"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Service enabled status"
                    }
                }
            },
            "UpdateSessionNameRequest": {
                "type": "object",
                "required": [
                    "session_id"
                ],
                "properties": {
                    "session_id": {
                        "type": "string",
                        "description": "Session ID"
                    },
                    "custom_name": {
                        "type": "string",
                        "description": "Custom display name"
                    }
                }
            },
            "UpdateSessionStatusRequest": {
                "type": "object",
                "required": [
                    "session_id",
                    "session_enabled"
                ],
                "properties": {
                    "session_id": {
                        "type": "string",
                        "description": "Session ID"
                    },
                    "session_enabled": {
                        "type": "boolean",
                        "description": "Session enabled status"
                    }
                }
            },
            "DeleteSessionRequest": {
                "type": "object",
                "required": [
                    "session_id"
                ],
                "properties": {
                    "session_id": {
                        "type": "string",
                        "description": "Session ID to delete"
                    }
                }
            },
            "StatResponse": {
                "type": "object",
                "properties": {
                    "platform": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlatformStat"
                        },
                        "description": "Platform statistics"
                    },
                    "message_count": {
                        "type": "integer",
                        "description": "Total message count"
                    },
                    "platform_count": {
                        "type": "integer",
                        "description": "Number of platforms"
                    },
                    "plugin_count": {
                        "type": "integer",
                        "description": "Number of plugins"
                    },
                    "plugins": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PluginStat"
                        },
                        "description": "Plugin information"
                    },
                    "message_time_series": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "description": "Time series data [timestamp, count]"
                        },
                        "description": "Message count time series"
                    },
                    "running": {
                        "$ref": "#/components/schemas/RunningTime"
                    },
                    "memory": {
                        "$ref": "#/components/schemas/MemoryInfo"
                    },
                    "cpu_percent": {
                        "type": "number",
                        "description": "CPU usage percentage"
                    },
                    "thread_count": {
                        "type": "integer",
                        "description": "Number of active threads"
                    },
                    "start_time": {
                        "type": "integer",
                        "description": "System start time (Unix timestamp)"
                    }
                }
            },
            "PlatformStat": {
                "type": "object",
                "properties": {
                    "platform": {
                        "type": "string",
                        "description": "Platform name"
                    },
                    "count": {
                        "type": "integer",
                        "description": "Message count"
                    },
                    "timestamp": {
                        "type": "integer",
                        "description": "Timestamp"
                    }
                }
            },
            "PluginStat": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Plugin name"
                    },
                    "version": {
                        "type": "string",
                        "description": "Plugin version"
                    },
                    "is_enabled": {
                        "type": "boolean",
                        "description": "Plugin enabled status"
                    }
                }
            },
            "RunningTime": {
                "type": "object",
                "properties": {
                    "hours": {
                        "type": "integer",
                        "description": "Running hours"
                    },
                    "minutes": {
                        "type": "integer",
                        "description": "Running minutes"
                    },
                    "seconds": {
                        "type": "integer",
                        "description": "Running seconds"
                    }
                }
            },
            "MemoryInfo": {
                "type": "object",
                "properties": {
                    "process": {
                        "type": "integer",
                        "description": "Process memory usage (MB)"
                    },
                    "system": {
                        "type": "integer",
                        "description": "System total memory (MB)"
                    }
                }
            },
            "VersionResponse": {
                "type": "object",
                "properties": {
                    "version": {
                        "type": "string",
                        "description": "AstrBot version"
                    },
                    "dashboard_version": {
                        "type": "string",
                        "description": "Dashboard version"
                    },
                    "change_pwd_hint": {
                        "type": "boolean",
                        "description": "Hint to change default password"
                    },
                    "need_migration": {
                        "type": "boolean",
                        "description": "Whether migration is needed"
                    }
                }
            },
            "StartTimeResponse": {
                "type": "object",
                "properties": {
                    "start_time": {
                        "type": "integer",
                        "description": "System start time (Unix timestamp)"
                    }
                }
            },
            "TestGhproxyRequest": {
                "type": "object",
                "required": [
                    "proxy_url"
                ],
                "properties": {
                    "proxy_url": {
                        "type": "string",
                        "description": "GitHub proxy URL"
                    }
                }
            },
            "TestGhproxyResponse": {
                "type": "object",
                "properties": {
                    "latency": {
                        "type": "number",
                        "description": "Connection latency in milliseconds"
                    }
                }
            },
            "T2iTemplatesResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of template names"
                    }
                }
            },
            "T2iActiveTemplateResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/T2iActiveTemplate"
                    }
                }
            },
            "T2iActiveTemplate": {
                "type": "object",
                "properties": {
                    "active_template": {
                        "type": "string",
                        "description": "Name of the active template"
                    }
                }
            },
            "CreateT2iTemplateRequest": {
                "type": "object",
                "required": [
                    "name",
                    "content"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Template name"
                    },
                    "content": {
                        "type": "string",
                        "description": "Template content"
                    }
                }
            },
            "T2iTemplateResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/T2iTemplateInfo"
                    },
                    "message": {
                        "type": "string",
                        "description": "Response message"
                    }
                }
            },
            "T2iTemplateInfo": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Template name"
                    }
                }
            },
            "SetActiveT2iTemplateRequest": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Template name to set as active"
                    }
                }
            },
            "T2iTemplateContentResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/T2iTemplateContent"
                    }
                }
            },
            "T2iTemplateContent": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Template name"
                    },
                    "content": {
                        "type": "string",
                        "description": "Template content"
                    }
                }
            },
            "UpdateT2iTemplateRequest": {
                "type": "object",
                "required": [
                    "content"
                ],
                "properties": {
                    "content": {
                        "type": "string",
                        "description": "New template content"
                    }
                }
            },
            "McpServersResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/McpServerInfo"
                },
                "description": "List of MCP servers"
            },
            "McpServerInfo": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Server name"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Whether the server is active"
                    },
                    "tools": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of tool names provided by the server"
                    },
                    "errlogs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Error logs from the server"
                    }
                },
                "description": "MCP server information"
            },
            "AddMcpServerRequest": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Server name"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Whether the server should be active",
                        "default": true
                    },
                    "command": {
                        "type": "string",
                        "description": "Command to run the MCP server"
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Arguments for the MCP server command"
                    },
                    "env": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Environment variables for the MCP server"
                    }
                },
                "description": "Request to add a new MCP server"
            },
            "UpdateMcpServerRequest": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Server name"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Whether the server should be active"
                    },
                    "command": {
                        "type": "string",
                        "description": "Command to run the MCP server"
                    },
                    "args": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Arguments for the MCP server command"
                    },
                    "env": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Environment variables for the MCP server"
                    }
                },
                "description": "Request to update an MCP server"
            },
            "DeleteMcpServerRequest": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Server name to delete"
                    }
                },
                "description": "Request to delete an MCP server"
            },
            "TestMcpConnectionRequest": {
                "type": "object",
                "required": [
                    "mcp_server_config"
                ],
                "properties": {
                    "mcp_server_config": {
                        "type": "object",
                        "description": "MCP server configuration to test",
                        "properties": {
                            "command": {
                                "type": "string",
                                "description": "Command to run the MCP server"
                            },
                            "args": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "Arguments for the MCP server command"
                            },
                            "env": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "description": "Environment variables for the MCP server"
                            }
                        }
                    }
                },
                "description": "Request to test MCP server connection"
            },
            "TestMcpConnectionResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of available tools"
                    },
                    "message": {
                        "type": "string",
                        "description": "Success message"
                    }
                },
                "description": "Response from MCP connection test"
            },
            "ToolListResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/ToolInfo"
                },
                "description": "List of registered tools"
            },
            "ToolInfo": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Tool name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Tool description"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the tool is enabled"
                    },
                    "tool_type": {
                        "type": "string",
                        "description": "Type of the tool"
                    }
                },
                "description": "Tool information"
            },
            "ToggleToolRequest": {
                "type": "object",
                "required": [
                    "name",
                    "activate"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Tool name"
                    },
                    "activate": {
                        "type": "boolean",
                        "description": "Whether to activate (true) or deactivate (false) the tool"
                    }
                },
                "description": "Request to toggle tool activation"
            },
            "SyncMcpProviderRequest": {
                "type": "object",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Provider name (e.g., 'modelscope')"
                    },
                    "access_token": {
                        "type": "string",
                        "description": "Access token for the provider"
                    }
                },
                "description": "Request to sync MCP server configurations from a provider"
            },
            "CheckUpdateResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Response status"
                    },
                    "message": {
                        "type": "string",
                        "description": "Response message"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "version": {
                                "type": "string",
                                "description": "Current version"
                            },
                            "has_new_version": {
                                "type": "boolean",
                                "description": "Whether a new version is available"
                            },
                            "dashboard_version": {
                                "type": "string",
                                "description": "Dashboard version"
                            },
                            "dashboard_has_new_version": {
                                "type": "boolean",
                                "description": "Whether a new dashboard version is available"
                            }
                        },
                        "description": "Update check data"
                    }
                },
                "description": "Response from update check"
            },
            "ReleasesResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "description": "Release information"
                        },
                        "description": "List of releases"
                    }
                },
                "description": "Response containing list of releases"
            },
            "UpdateProjectRequest": {
                "type": "object",
                "required": [
                    "version"
                ],
                "properties": {
                    "version": {
                        "type": "string",
                        "description": "Version to update to (or 'latest')"
                    },
                    "reboot": {
                        "type": "boolean",
                        "description": "Whether to reboot after update",
                        "default": true
                    },
                    "proxy": {
                        "type": "string",
                        "description": "Proxy URL to use for download"
                    }
                },
                "description": "Request to update AstrBot project"
            },
            "InstallPipPackageRequest": {
                "type": "object",
                "required": [
                    "package"
                ],
                "properties": {
                    "package": {
                        "type": "string",
                        "description": "Package name to install"
                    },
                    "mirror": {
                        "type": "string",
                        "description": "PyPI mirror URL"
                    }
                },
                "description": "Request to install a pip package"
            },
            "MigrationRequest": {
                "type": "object",
                "properties": {
                    "platform_id_map": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Platform ID mapping for migration"
                    }
                },
                "description": "Request to perform database migration"
            },
            "LoginRequest": {
                "type": "object",
                "required": [
                    "username",
                    "password"
                ],
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "Username for authentication"
                    },
                    "password": {
                        "type": "string",
                        "description": "Password for authentication"
                    }
                },
                "description": "Request for user login"
            }
        }
    }
}
